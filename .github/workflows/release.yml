---
name: Release
on:
  workflow_call:
    inputs:
      branch:
       type: string
       required: true
      nightly:
        type: boolean
        required: true
    secrets:
      token:
       required: false
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        required: true
        description: Which Branch to make the build from
        options:
          - "main"
      nightly:
        type: boolean
        required: true
        description: Is this part of a "nightly" workflow?
        default: true
      
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: write
        packages: write
    steps:
      - name: checkout code
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{inputs.branch}}
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Set Version
        if: inputs.nightly      
        run: echo "VERSION=${{inputs.branch}}-nightly" >> $GITHUB_ENV
      - name: Set Version
        if: inputs.nightly == false
        run: echo "VERSION=${{inputs.branch}}" >> $GITHUB_ENV
      - name: show version
        run: echo ${VERSION}
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.token != null && secrets.token || secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: k8s/lrgs-controller
          tags: type=sha,format=long
      - uses: docker/build-push-action@v6
        id: build-and-push
        with:
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Sign the container image
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}